<h1>Set property type</h1>
<p>As you know php does not have strongly shaped primitive variable types like string, integer, float, boolean, time and date.  But db.php still needs to know what primitive type your properties represent if they represent primitive type at all.</p>
<p>Do not confuse field type and property type. Field is database table field associated to class property. You have classes and properties in your code not fields and tables. Field type defines type of a field in actual database table while property type defines type of your property in class.</p>
<p>Defining property type goes with php doc standard with @var keyword like:</p>
<pre><code class="language-php">/**
* @var integer
*/
public $foo;</code></pre>
<p>This types are available as basic pseudo types in db.php:</p>
<pre><code class="language-php">integer
boolean
float
string
date
time
binary</code></pre>
<p>By default property type is string. By default if property name is id and is first property than its type is integer (If no property named id found than first property gets primary but not integer).</p>
<p>This property types come with their defaults:
<strong>integer</strong> property type sets field type also as <em>integer</em> with.
<strong>string</strong> property type sets field type as <em>char</em> with length <em>128</em>.
<strong>float</strong> property type sets field type as <em>float</em>.
<strong>boolean</strong> property type sets field type as <em>smallint</em> with length <em>1</em>.
<strong>binary</strong> property type sets field type as <em>blob</em>
<strong>date</strong> property type sets field type as <em>date</em>
<strong>time</strong> property type sets field type as <em>datetime</em></p>
<p>So all this types can go as @var parameter. But you can also specify there any other class like:</p>
<pre><code class="language-php">/**
* @var \user\group
*/
public $group;</code></pre>
<p>This means property group represents instance of \user\group. In case class specified as @var parameter property field type is set to integer by default. Specifying class as property type also sets up relation. Of course you can change field type separately from property type.</p>
<p>But also if specified class extends abstract class \db\value than no relation is set instead it is treated as custom value type and its field type is set to string by default and custom value types are subjects of further reading.</p>