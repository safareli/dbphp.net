<p>db.php has nice pager. When using \db\pager table handler automaticaly calculates total count of results and paginates to specified size of chunks.</p>
<pre><code class="language-php">$pager = new \db\pager(integer $page, integer $count);</code></pre>
<p><strong>page</strong> is current page</p>
<p><strong>count</strong> is count of items per page</p>
<p>To use pager simply pass it to load function:</p>
<pre><code class="language-php">$database-&gt;path-&gt;to-&gt;class-&gt;load (\db\pager $pager);</code></pre>
<p>Example:</p>
<pre><code class="language-php">$pager = new \db\pager (null, 8);

$products = $database-&gt;shop-&gt;product-&gt;load ($pager);

echo count ($products);</code></pre>
<p>Outputs 8 if items in products table are not less than 8</p>
<p>To load items from page 2:</p>
<pre><code class="language-php">$pager = new \db\pager (3, 8);
$products = $database-&gt;shop-&gt;product-&gt;load ($pager);

\db\debug($pager);</code></pre>
<p>Pager object will look like this if we have total 30 products in table:</p>
<pre><code class="language-php">db\pager::__set_state(array(
      'page'  =  3,
      'pages'  =  4,
      'total'  =  30,
      'count'  =  8,
      'from'  =  16,
))</code></pre>
<p>Current page</p>
<pre><code class="language-php">$pager-&gt;page</code></pre>
<p>Number of pages available</p>
<pre><code class="language-php">$pager-&gt;pages</code></pre>
<p>Total items in table</p>
<pre><code class="language-php">$pager-&gt;total</code></pre>
<p>Item count per page</p>
<pre><code class="language-php">$pager-&gt;count</code></pre>
<p>First item number of result</p>
<pre><code class="language-php">$pager-&gt;from</code></pre>
<p>Table handler simply uses</p>
<pre><code class="language-php">... limit $pager-&gt;from, $pager-&gt;count</code></pre>
<p>To generate query</p>
<p>To be simple you can do pager loading in one line:</p>
<pre><code class="language-php">$database-&gt;shop-&gt;product-&gt;load(new \db\pager($_REQUEST['page'], 10));</code></pre>
<p>Where $_REQUEST['page'] holds current page number. If you pass greater number in page parameter than available pages than current page will be set to last page. If you pass page number less than 1 or null or not integer than current page will be set to 1.</p>
<p>Pager also has method next it is rarely usefull but allows to load items from table by small chunks not to overfill memory and iterate through them:</p>
<pre><code class="language-php">$pager = new \db\pager (null, 10);

do
{
    $result = $database-&gt;shop-&gt;product-&gt;load ($pager);
    if ($result)
    {
        foreach ($result as $product)
        {

        }
    }
}
while ($pager-&gt;next());</code></pre>
<p>This will iterate throgh every product and will load them 10 by 10. Sometimes if you have 99999 records in table and you have to affect them all it is extremly important not to load them all because objects in result might overload memory if they are large.</p>