<pre><code>$database = new \db\database (string $database, \db\link $link);</code></pre>
<p>But befure discussing it let me introduce \db\link to you.</p>
<p>By default db.php establishes connections using \db\link class which by itself is wrapper of php built in PDO class.</p>
<pre><code class="language-php">$link = new \db\link (string $name, string $hostname, string $username, string $password, array $config);</code></pre>
<p><strong>name</strong>
It is unique name of the link and you will use it later. For example it might be named like 'my_mysql_link'.</p>
<p><strong>hostname</strong>
It is actually a data source name. db.php uses <strong>PDO</strong> as default link provider so first parameter is PDO data source name string.</p>
<p><strong>username</strong>
This is what you think.</p>
<p><strong>password</strong>
Same applies here.</p>
<p><strong>config</strong>
By default \db\link is PDO wrapper and here you can pass PDO configuration options. Default value of config is</p>
<pre><code class="language-php">array (\PDO::MYSQL_ATTR_INIT_COMMAND =&gt; "SET NAMES 'UTF8'", \PDO::ATTR_PERSISTENT =&gt; true)</code></pre>
<p>You can also first init $link = new \db\link(...) and than set custom configuration option like:</p>
<pre><code class="language-php">$link-&gt;config[\PDO::MYSQL_ATTR_READ_DEFAULT_FILE] = '/etc/my.cnf'</code></pre>
<p>Link goes as a second parameter of \db\database constructor. If you are passing link than first parameter is default database name for your tables.</p>
<pre><code>$database = new \db\database (string $database, \db\link $link);</code></pre>
<p><strong>database</strong>
Default database name for your tables</p>
<p>Usage:</p>
<pre><code class="language-php">$database = new \db\database ('my_db', new \db\link ('my_mysql_link', 'mysql:host=127.0.0.1', 'my_user', 'my_pass'));</code></pre>
<p>After creating you can access your link by name:</p>
<pre><code class="language-php">$database-&gt;link($name);</code></pre>
<p>First link is considered as default link. Default link can be accessed without parameter:</p>
<pre><code class="language-php">$database-&gt;link();</code></pre>
<h4>Overriding default link class</h4>
<p>You can override link and develop your own. Just look at code of class \db\link and make same methods. It is done without interface. db.php even does not check where do your link objects come it just requires that that they had following methods:</p>
<h5>query</h5>
<p>Executes query and returns result array or resource iteratable as array if any. Returns null if resultless query or false if query has no results.</p>
<pre><code class="language-php">[array] public function query (string $query)</code></pre>
<h5>select</h5>
<p>Returns result array or resource iteratable as array or false if no records. Array must contain values with numerical keys begining with 0 in natural select field order. Like if we select field1,field2 from table, result record array must contain $row[0] = 'field 1 value', $row[1] = 'field 2 value'</p>
<pre><code class="language-php">array public function select (string $query)</code></pre>
<h5>fetch</h5>
<p>Fetches first record of result. Result must contain values with numerical keys begining with 0 in natural select field order.</p>
<pre><code class="language-php">array public function fetch (string $query)</code></pre>
<h5>value</h5>
<p>Fetches first value of first record of result.</p>
<pre><code class="language-php">string public function value (string $query)</code></pre>
<h5>error</h5>
<p>Must return true or false if passed $code patarmeter and $code parameter equals actual error code that had place. Or must return error information if no $code parameter passed. Comparing passed $code and returning true or false is important part of link class while autmaticaly generating database structure.</p>
<pre><code class="language-php">boolean/mixed public function error (integer $code=null)</code></pre>
<h5>id</h5>
<p>Returns last inserted id for that connection</p>
<pre><code class="language-php">integer public function id ()</code></pre>
<p>For further reading see sample codes using only \db\link <a href="https://github.com/hazardland/db.php/blob/master/samples/002.link.php">https://github.com/hazardland/db.php/blob/master/samples/002.link.php</a></p>